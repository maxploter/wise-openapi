openapi: 3.0.0
info:
  title: Wise Platform API
  version: 1.0.0
  description: |
    Comprehensive API for Wise platform services including:
    - Profile
    - Activity tracking and management
    - Quote creation and management
servers:
  - url: https://api.sandbox.transferwise.tech
components:
  schemas:
    PersonalProfile:
      type: object
      properties:
        id:
          type: integer
          example: 30000001
        type:
          type: string
          example: "personal"
        details:
          type: object
          properties:
            firstName:
              type: string
              example: "Oliver"
            lastName:
              type: string
              example: "Wilson"
            dateOfBirth:
              type: string
              format: date
              example: "1977-07-01"
            phoneNumber:
              type: string
              example: "+3725064992"
            avatar:
              type: string
              example: ""
            occupations:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: "Software Engineer"
                  format:
                    type: string
                    example: "FREE_FORM"
            primaryAddress:
              type: integer
              nullable: true
              example: null
            firstNameInKana:
              type: string
              nullable: true
              example: null
            lastNameInKana:
              type: string
              nullable: true
              example: null
    BusinessProfile:
      type: object
      properties:
        id:
          type: integer
          example: 30000002
        type:
          type: string
          example: "business"
        details:
          type: object
          properties:
            name:
              type: string
              example: "ABC Logistics Ltd"
            registrationNumber:
              type: string
              example: "12144939"
            companyType:
              type: string
              example: "LIMITED"
            primaryAddress:
              type: integer
              example: 4000001
    Error:
      type: object
      properties:
        errorMessage:
          type: string
          nullable: true
        success:
          type: boolean
    Director:
      type: object
      properties:
        id:
          type: integer
          example: 10
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        dateOfBirth:
          type: string
          format: date
          example: "1982-05-20"
        countryOfResidenceIso3Code:
          type: string
          example: "usa"
    UBO:
      type: object
      properties:
        id:
          type: string
          example: "013ab1c2688d0185b582ee7e0bcb28b2"
        name:
          type: string
          example: "John Doe"
        dateOfBirth:
          type: string
          format: date
          example: "1982-05-20"
        countryOfResidenceIso3Code:
          type: string
          example: "usa"
        addressFirstLine:
          type: string
          example: "123 Fake St"
        postCode:
          type: string
          example: "FK 12345"
        ownershipPercentage:
          type: integer
          example: 30
    VerificationStatusResponse:
      type: object
      properties:
        routes:
          type: array
          items:
            type: object
            properties:
              source_currency:
                type: string
                example: "GBP"
              maximum_entitled_amount:
                type: number
                example: 100000
              current_status:
                type: string
                example: "verified"
        request_id:
          type: string
          example: "e66da5f6-2456-403c-bfcb-908885ee1a61"
    Activity:
      type: object
      properties:
        id:
          type: string
          description: Unique activity identifier
        type:
          $ref: '#/components/schemas/ActivityType'
        resource:
          $ref: '#/components/schemas/ActivityResource'
        title:
          type: string
          description: |
            Title with custom formatting tags:
            <strong>, <positive>, <negative>, <strikethrough>
        description:
          type: string
          description: Brief activity summary
        primaryAmount:
          type: string
          description: Currency-formatted primary amount (e.g., "100 USD")
        secondaryAmount:
          type: string
          description: Currency-formatted secondary amount (optional)
        status:
          $ref: '#/components/schemas/ActivityStatus'
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
      required:
        - id
        - type
        - resource
        - title
        - status
        - createdOn
        - updatedOn

    ActivityResource:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ActivityResourceType'
        id:
          type: string
          description: Resource identifier
      required:
        - type
        - id

    ActivitiesResponse:
      type: object
      properties:
        cursor:
          type: string
          nullable: true
          description: Pagination cursor for next page
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'

    ActivityType:
      type: string
      enum:
        - ACQUIRING_PAYMENT
        - AUTO_CONVERSION
        - BALANCE_ADJUSTMENT
        - BALANCE_ASSET_FEE
        - BALANCE_CASHBACK
        - BALANCE_DEPOSIT
        - BALANCE_HOLD_FEE
        - BALANCE_INTEREST
        - BANK_DETAILS_ORDER
        - BATCH_TRANSFER
        - CARD_CASHBACK
        - CARD_CHECK
        - CARD_ORDER
        - CARD_PAYMENT
        - CASH_WITHDRAWAL
        - CLAIMABLE_SEND_ORDER
        - DIRECT_DEBIT_TRANSACTION
        - EXCESS_REFUND
        - FEE_REFUND
        - INCORPORATION_ORDER
        - INTERBALANCE
        - PAYMENT_REQUEST
        - PREFUNDING_TRANSFER
        - REWARD
        - SCHEDULED_SEND_ORDER
        - TRANSFER

    ActivityResourceType:
      type: string
      enum:
        - ACCRUAL_CHARGE
        - ACQUIRING_PAYMENT
        - ASSETS_WITHDRAWAL
        - BALANCE_CASHBACK
        - BALANCE_INTEREST
        - BALANCE_TRANSACTION
        - BANK_DETAILS_ORDER
        - BATCH_TRANSFER
        - CARD_CASHBACK
        - CARD_ORDER
        - CARD_TRANSACTION
        - DIRECT_DEBIT_INSTRUCTION
        - DIRECT_DEBIT_TRANSACTION
        - FEE_REFUND
        - INCIDENT_REFUND
        - INCORPORATION_ORDER
        - OPERATIONAL_TRANSACTION
        - PAYMENT_REQUEST
        - REWARD
        - REWARDS_REDEMPTION
        - SEND_ORDER
        - SEND_ORDER_EXECUTION
        - TRANSFER

    ActivityStatus:
      type: string
      enum:
        - REQUIRES_ATTENTION
        - IN_PROGRESS
        - UPCOMING
        - COMPLETED
        - CANCELLED
    Quote:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: GUID format quote ID
        sourceCurrency:
          type: string
          example: GBP
        targetCurrency:
          type: string
          example: USD
        sourceAmount:
          type: number
          format: double
          example: 100
        targetAmount:
          type: number
          format: double
          example: 129.24
        payOut:
          type: string
          example: BANK_TRANSFER
        rate:
          type: number
          format: double
          example: 1.30445
        createdTime:
          type: string
          format: date-time
          example: "2019-04-05T13:18:58Z"
        profile:
          type: integer
          example: 101
        rateType:
          type: string
          enum: [ FIXED, FLOATING ]
          example: FIXED
        rateExpirationTime:
          type: string
          format: date-time
          example: "2019-04-08T13:18:57Z"
        providedAmountType:
          type: string
          enum: [ SOURCE, TARGET ]
          example: SOURCE
        pricingConfiguration:
          $ref: '#/components/schemas/PricingConfiguration'
        paymentOptions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentOption'
        status:
          type: string
          enum: [ PENDING, ACCEPTED, FUNDED, EXPIRED ]
          example: PENDING
        expirationTime:
          type: string
          format: date-time
          example: "2019-04-05T13:48:58Z"
        notices:
          type: array
          items:
            $ref: '#/components/schemas/Notice'

    PricingConfiguration:
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/FeeConfiguration'

    FeeConfiguration:
      type: object
      properties:
        type:
          type: string
          enum: [ OVERRIDE ]
        variable:
          type: number
          format: double
        fixed:
          type: number
          format: double

    PaymentOption:
      type: object
      properties:
        disabled:
          type: boolean
        estimatedDelivery:
          type: string
          format: date-time
        formattedEstimatedDelivery:
          type: string
        fee:
          $ref: '#/components/schemas/FeeDetails'
        price:
          $ref: '#/components/schemas/PriceDetails'
        payIn:
          type: string
        payOut:
          type: string

    FeeDetails:
      type: object
      properties:
        total:
          type: number
          format: double

    PriceDetails:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/TotalPrice'

    TotalPrice:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/Amount'

    Amount:
      type: object
      properties:
        amount:
          type: number
          format: double
        currency:
          type: string

    Notice:
      type: object
      properties:
        text:
          type: string
        type:
          type: string
          enum: [ WARNING, INFO, BLOCKED ]

    CreateUnauthenticatedQuoteRequest:
      type: object
      required:
        - sourceCurrency
        - targetCurrency
      properties:
        sourceCurrency:
          type: string
        targetCurrency:
          type: string
        sourceAmount:
          type: number
          format: double
          nullable: true
        targetAmount:
          type: number
          format: double
          nullable: true
        pricingConfiguration:
          $ref: '#/components/schemas/PricingConfiguration'
      oneOf:
        - required: [ sourceAmount ]
        - required: [ targetAmount ]

    CreateAuthenticatedQuoteRequest:
      type: object
      required:
        - sourceCurrency
        - targetCurrency
      properties:
        sourceCurrency:
          type: string
        targetCurrency:
          type: string
        sourceAmount:
          type: number
          format: double
          nullable: true
        targetAmount:
          type: number
          format: double
          nullable: true
        targetAccount:
          type: integer
          nullable: true
        paymentMetadata:
          type: object
          properties:
            transferNature:
              type: string
          nullable: true
        pricingConfiguration:
          $ref: '#/components/schemas/PricingConfiguration'
          nullable: true
      oneOf:
        - required: [ sourceAmount ]
        - required: [ targetAmount ]

    UpdateQuoteRequest:
      type: object
      properties:
        targetAccount:
          type: integer
        payOut:
          type: string
        paymentMetadata:
          type: object
          properties:
            transferNature:
              type: string
        pricingConfiguration:
          $ref: '#/components/schemas/PricingConfiguration'


  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
security:
  - BearerAuth: [ ]
paths:
  /v2/profiles/personal-profile:
    post:
      summary: Create a personal profile
      operationId: createPersonalProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - address
                - nationality
                - dateOfBirth
                - contactDetails
              properties:
                firstName:
                  type: string
                  maxLength: 30
                lastName:
                  type: string
                  maxLength: 30
                address:
                  type: object
                  required:
                    - addressFirstLine
                    - city
                    - countryIso3Code
                  properties:
                    addressFirstLine:
                      type: string
                    city:
                      type: string
                    countryIso3Code:
                      type: string
                contactDetails:
                  type: object
                  required:
                    - email
                    - phoneNumber
                  properties:
                    email:
                      type: string
                      format: email
                    phoneNumber:
                      type: string
      responses:
        '200':
          description: Personal profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalProfile'
  /v2/profiles/business-profile:
    post:
      summary: Create a business profile
      operationId: createBusinessProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - businessName
                - registrationNumber
                - companyType
                - address
              properties:
                businessName:
                  type: string
                registrationNumber:
                  type: string
                companyType:
                  type: string
                  enum: [ "LIMITED", "PARTNERSHIP", ... ]
      responses:
        '200':
          description: Business profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProfile'
  /v2/profiles/{profileId}/personal-profile:
    put:
      summary: Update a personal profile
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  maxLength: 30
                lastName:
                  type: string
                  maxLength: 30
      responses:
        '200':
          description: Personal profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalProfile'
  /v2/profiles/{profileId}/business-profile:
    put:
      summary: Update a business profile
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessName:
                  type: string
                registrationNumber:
                  type: string
      responses:
        '200':
          description: Business profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProfile'
  /v2/profiles/{profileId}:
    get:
      summary: Retrieve a profile by ID
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PersonalProfile'
                  - $ref: '#/components/schemas/BusinessProfile'
  /v2/profiles:
    get:
      summary: List profiles for a user account
      responses:
        '200':
          description: List of profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/PersonalProfile'
                    - $ref: '#/components/schemas/BusinessProfile'
  /v1/profiles/{profileId}/verification-documents:
    post:
      summary: Create identification document
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - uniqueIdentifier
              properties:
                type:
                  type: string
                  enum: [ "DRIVERS_LICENCE", "IDENTITY_CARD", ... ]
                uniqueIdentifier:
                  type: string
      responses:
        '200':
          description: Document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/profiles/{profileId}/directors:
    post:
      summary: Add directors
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Director'
      responses:
        '200':
          description: Directors added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Director'
    get:
      summary: List directors
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of directors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Director'
    put:
      summary: Update directors
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Director'
      responses:
        '200':
          description: Directors updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Director'
  /v3/profiles/{profileId}/verification-status/bank-transfer:
    post:
      summary: Check verification status
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
        - name: source_currencies
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Verification status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationStatusResponse'

  /profiles/{profileId}/activities:
    get:
      tags:
        - Activities
      summary: List activities for a profile
      description: Retrieve paginated list of activities for a user profile with filtering options
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: string
          description: ID of the user profile
        - name: monetaryResourceType
          in: query
          schema:
            $ref: '#/components/schemas/ActivityResourceType'
          description: Filter by resource type
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/ActivityStatus'
          description: Filter by activity status
        - name: since
          in: query
          schema:
            type: string
            format: date-time
          description: Filter activities created after this timestamp
        - name: until
          in: query
          schema:
            type: string
            format: date-time
          description: Filter activities created before this timestamp
        - name: nextCursor
          in: query
          schema:
            type: string
          description: Pagination cursor for next page
        - name: size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of results per page
      responses:
        '200':
          description: Successful response with activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesResponse'
      security:
        - BearerAuth: [ ]
  /quotes:
    post:
      summary: Create an unauthenticated quote
      description: Creates an example quote for illustration purposes. The returned quote cannot be used to create transfers.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUnauthenticatedQuoteRequest'
      responses:
        '200':
          description: Successfully created unauthenticated quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
      security: [ ]

  /profiles/{profileId}/quotes:
    post:
      summary: Create an authenticated quote
      description: Creates a quote associated with a profile. Requires user authentication.
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthenticatedQuoteRequest'
      responses:
        '201':
          description: Successfully created authenticated quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
      security:
        - BearerAuth: [ ]

  /profiles/{profileId}/quotes/{quoteId}:
    patch:
      summary: Update a quote
      description: Updates a quote with recipient information or payment metadata.
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
        - name: quoteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateQuoteRequest'
      responses:
        '200':
          description: Successfully updated quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
      security:
        - BearerAuth: [ ]

    get:
      summary: Retrieve a quote by ID
      description: Retrieves a quote by its ID. Expired quotes are available for ~48 hours.
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
        - name: quoteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
      security:
        - BearerAuth: [ ]
